// =====================================================
// EITEC VPN - Á≥ªÁªüÈÖçÁΩÆÁÆ°ÁêÜÂäüËÉΩ  
// =====================================================
//
// üìã ÂäüËÉΩÊ¶ÇËø∞Ôºö
// - Êèê‰æõÁ≥ªÁªüÁ∫ßWireGuardÈÖçÁΩÆÁÆ°ÁêÜÁïåÈù¢
// - ÊòæÁ§∫Á≥ªÁªüÁä∂ÊÄÅÊ¶ÇËßàÂíåÊé•Âè£ÁªüËÆ°‰ø°ÊÅØ
// - Â§ÑÁêÜÁ≥ªÁªüÈÖçÁΩÆÂØºÂá∫„ÄÅÊó•ÂøóÊü•ÁúãÁ≠âÈ´òÁ∫ßÂäüËÉΩ
//
// üîó ‰æùËµñÂÖ≥Á≥ªÔºö
// - ‰æùËµñÔºöshared-utils.js (Â∑•ÂÖ∑ÂáΩÊï∞)
// - ‰æùËµñÔºöbootstrap (Ê®°ÊÄÅÊ°ÜÁÆ°ÁêÜ)
// - Ë∞ÉÁî® interface-management.js ÁöÑÂáΩÊï∞ËøõË°åÊé•Âè£Êìç‰Ωú
//
// üì¶ ‰∏ªË¶ÅÂäüËÉΩÔºö
// - showWireGuardConfig() - ÊòæÁ§∫Á≥ªÁªüÈÖçÁΩÆÊÄªËßà
// - refreshSystemConfig() - Âà∑Êñ∞Á≥ªÁªüÁä∂ÊÄÅ
// - exportSystemConfig() - ÂØºÂá∫Á≥ªÁªüÈÖçÁΩÆ
// - viewSystemLogs() - Êü•ÁúãÁ≥ªÁªüÊó•Âøó
// - initializeWireGuard() - ÂàùÂßãÂåñWireGuardÊúçÂä°
// - Á≥ªÁªüÁªüËÆ°ÂíåÁä∂ÊÄÅÁõëÊéßÊòæÁ§∫
//
// üìè Êñá‰ª∂Â§ßÂ∞èÔºö25.5KB (ÂéüÊñá‰ª∂ÁöÑ 24.4%)
// =====================================================

// WireGuardÈÖçÁΩÆÁÆ°ÁêÜ - ÈáçÊñ∞ËÆæËÆ°‰∏∫Á≥ªÁªüÁ∫ßÁÆ°ÁêÜÈù¢Êùø
async function showWireGuardConfig() {
    const modalElement = document.getElementById('wireGuardConfigModal');
    if (!modalElement) {
        console.error('Êâæ‰∏çÂà∞ wireGuardConfigModal ÂÖÉÁ¥†');
        return;
    }
    
    // ‰ΩøÁî®Êñ∞ÁöÑÊ®°ÊÄÅÊ°ÜÁÆ°ÁêÜÂô®
    ModalManager.show(modalElement);
    
    try {
        const token = localStorage.getItem('access_token');
        
        // Ëé∑ÂèñÁ≥ªÁªüÈÖçÁΩÆÔºàÊúçÂä°Âô®‰ø°ÊÅØÔºâ
        const configResponse = await fetch('/api/v1/config', {
            headers: { 'Authorization': `Bearer ${token}` }
        });
        
        // Ëé∑ÂèñÂ∏¶Áä∂ÊÄÅÁöÑÊé•Âè£‰ø°ÊÅØ
        const interfaceStatsResponse = await fetch('/api/v1/system/wireguard-interfaces', {
            headers: { 'Authorization': `Bearer ${token}` }
        });
        
        if (configResponse.ok && interfaceStatsResponse.ok) {
            const configResult = await configResponse.json();
            const interfaceStatsResult = await interfaceStatsResponse.json();
            const config = configResult.data;
            const interfaces = interfaceStatsResult.data || [];
            
            // ËÆ°ÁÆóÁªüËÆ°‰ø°ÊÅØ
            const interfaceStats = {
                total_interfaces: interfaces.length,
                active_interfaces: interfaces.filter(iface => iface.status === 1).length,
                total_capacity: interfaces.reduce((sum, iface) => sum + (iface.max_peers || 0), 0),
                used_capacity: interfaces.reduce((sum, iface) => sum + (iface.total_peers || 0), 0)
            };
            
            let content = `
                <!-- Á≥ªÁªüÁä∂ÊÄÅÊ¶ÇËßà -->
                <div class="row mb-4">
                    <div class="col-md-12">
                        <div class="card" style="background: rgba(30, 41, 59, 0.8); border: 1px solid rgba(100, 116, 139, 0.3);">
                            <div class="card-header" style="background: rgba(15, 23, 42, 0.6); border-bottom: 1px solid rgba(100, 116, 139, 0.3);">
                                <h6 class="mb-0" style="color: #f1f5f9;"><i class="fas fa-server me-2"></i>Á≥ªÁªüÁä∂ÊÄÅÊ¶ÇËßà</h6>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-3">
                                        <div class="text-center">
                                            <div class="h4" style="color: #3b82f6;">${interfaceStats.total_interfaces}</div>
                                            <div style="color: #94a3b8;">ÊÄªÊé•Âè£Êï∞</div>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="text-center">
                                            <div class="h4" style="color: #10b981;">${interfaceStats.active_interfaces}</div>
                                            <div style="color: #94a3b8;">ËøêË°å‰∏≠</div>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="text-center">
                                            <div class="h4" style="color: #06b6d4;">${interfaceStats.total_capacity}</div>
                                            <div style="color: #94a3b8;">ÊÄªÂÆπÈáè</div>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="text-center">
                                            <div class="h4" style="color: #f59e0b;">${interfaceStats.used_capacity}</div>
                                            <div style="color: #94a3b8;">Â∑≤‰ΩøÁî®</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- ÊúçÂä°Âô®ÈÖçÁΩÆ -->
                <div class="row mb-4">
                    <div class="col-md-6">
                        <div class="card" style="background: rgba(30, 41, 59, 0.8); border: 1px solid rgba(100, 116, 139, 0.3);">
                            <div class="card-header" style="background: rgba(15, 23, 42, 0.6); border-bottom: 1px solid rgba(100, 116, 139, 0.3);">
                                <h6 class="mb-0" style="color: #f1f5f9;"><i class="fas fa-server me-2"></i>ÊúçÂä°Âô®‰ø°ÊÅØ</h6>
                            </div>
                            <div class="card-body">
                                <div class="mb-3">
                                    <label class="form-label" style="color: #e2e8f0;">ÊúçÂä°Âô®ÂêçÁß∞</label>
                                    <input type="text" class="form-control" value="${config.server.name}" readonly 
                                           style="background: rgba(15, 23, 42, 0.6); border: 1px solid rgba(100, 116, 139, 0.3); color: #f1f5f9;">
                                </div>
                                <div class="mb-3">
                                    <label class="form-label" style="color: #e2e8f0;">Â§ñÁΩëÁ´ØÁÇπ</label>
                                    <input type="text" class="form-control" value="${config.server.endpoint || 'Êú™ÈÖçÁΩÆ'}" readonly 
                                           style="background: rgba(15, 23, 42, 0.6); border: 1px solid rgba(100, 116, 139, 0.3); color: #f1f5f9;">
                                </div>
                                <div class="mb-0">
                                    <label class="form-label" style="color: #e2e8f0;">WebÁÆ°ÁêÜÁ´ØÂè£</label>
                                    <input type="number" class="form-control" value="${config.server.web_port}" readonly 
                                           style="background: rgba(15, 23, 42, 0.6); border: 1px solid rgba(100, 116, 139, 0.3); color: #f1f5f9;">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card" style="background: rgba(30, 41, 59, 0.8); border: 1px solid rgba(100, 116, 139, 0.3);">
                            <div class="card-header" style="background: rgba(15, 23, 42, 0.6); border-bottom: 1px solid rgba(100, 116, 139, 0.3);">
                                <h6 class="mb-0" style="color: #f1f5f9;"><i class="fas fa-chart-bar me-2"></i>Á≥ªÁªüÁªüËÆ°</h6>
                            </div>
                            <div class="card-body">
                                <div class="mb-3">
                                    <div class="d-flex justify-content-between" style="color: #e2e8f0;">
                                        <span>Êé•Âè£‰ΩøÁî®Áéá</span>
                                        <span>${interfaceStats.active_interfaces}/${interfaceStats.total_interfaces}</span>
                                    </div>
                                    <div class="progress mt-1" style="background: rgba(15, 23, 42, 0.6);">
                                        <div class="progress-bar bg-success" style="width: ${interfaceStats.total_interfaces > 0 ? (interfaceStats.active_interfaces / interfaceStats.total_interfaces * 100) : 0}%"></div>
                                    </div>
                                </div>
                                <div class="mb-3">
                                    <div class="d-flex justify-content-between" style="color: #e2e8f0;">
                                        <span>ËøûÊé•‰ΩøÁî®Áéá</span>
                                        <span>${interfaceStats.used_capacity}/${interfaceStats.total_capacity}</span>
                                    </div>
                                    <div class="progress mt-1" style="background: rgba(15, 23, 42, 0.6);">
                                        <div class="progress-bar bg-info" style="width: ${interfaceStats.total_capacity > 0 ? (interfaceStats.used_capacity / interfaceStats.total_capacity * 100) : 0}%"></div>
                                    </div>
                                </div>
                                <div class="mb-0">
                                    <div class="d-flex justify-content-between" style="color: #e2e8f0;">
                                        <span>Á≥ªÁªüÁä∂ÊÄÅ</span>
                                        <span class="badge ${interfaceStats.active_interfaces > 0 ? 'bg-success' : 'bg-warning'}">
                                            ${interfaceStats.active_interfaces > 0 ? 'ËøêË°å‰∏≠' : 'ÂæÖÂêØÂä®'}
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Êé•Âè£Ê¶ÇËßà -->
                <div class="row mb-4">
                    <div class="col-md-12">
                        <div class="card" style="background: rgba(30, 41, 59, 0.8); border: 1px solid rgba(100, 116, 139, 0.3);">
                            <div class="card-header" style="background: rgba(15, 23, 42, 0.6); border-bottom: 1px solid rgba(100, 116, 139, 0.3);">
                                <h6 class="mb-0" style="color: #f1f5f9;"><i class="fas fa-list me-2"></i>Êé•Âè£Ê¶ÇËßà</h6>
                            </div>
                            <div class="card-body" style="padding: 0;">
                                <div class="table-responsive">
                                    <table style="width: 100%; margin: 0; background: transparent; color: #e2e8f0;">
                                        <thead>
                                            <tr style="background: rgba(15, 23, 42, 0.8); border-bottom: 2px solid rgba(100, 116, 139, 0.4);">
                                                <th style="color: #f1f5f9; border: none; padding: 12px 16px; font-weight: 600; text-align: left;">Êé•Âè£ÂêçÁß∞</th>
                                                <th style="color: #f1f5f9; border: none; padding: 12px 16px; font-weight: 600; text-align: left;">Áä∂ÊÄÅ</th>
                                                <th style="color: #f1f5f9; border: none; padding: 12px 16px; font-weight: 600; text-align: left;">ÁΩëÁªúÊÆµ</th>
                                                <th style="color: #f1f5f9; border: none; padding: 12px 16px; font-weight: 600; text-align: left;">Á´ØÂè£</th>
                                                <th style="color: #f1f5f9; border: none; padding: 12px 16px; font-weight: 600; text-align: left;">ËøûÊé•Êï∞</th>
                                                <th style="color: #f1f5f9; border: none; padding: 12px 16px; font-weight: 600; text-align: left;">Êìç‰Ωú</th>
                                            </tr>
                                        </thead>
                                        <tbody style="background: transparent;">
                                            ${interfaceStats.interfaces.map(iface => `
                                                <tr style="background: rgba(30, 41, 59, 0.3); border-bottom: 1px solid rgba(100, 116, 139, 0.2); transition: background-color 0.2s ease;" 
                                                    onmouseover="this.style.background='rgba(30, 41, 59, 0.6)'" 
                                                    onmouseout="this.style.background='rgba(30, 41, 59, 0.3)'">
                                                    <td style="border: none; padding: 12px 16px;">
                                                        <div style="display: flex; align-items: center;">
                                                            <i class="fas fa-ethernet" style="color: #60a5fa; margin-right: 8px; font-size: 14px;"></i>
                                                            <div>
                                                                <div style="color: #f1f5f9; font-size: 14px; font-weight: 600;">${iface.name}</div>
                                                                <small style="color: #94a3b8;">${iface.description || 'Êó†ÊèèËø∞'}</small>
                                                            </div>
                                                        </div>
                                                    </td>
                                                    <td style="border: none; padding: 12px 16px;">
                                                        <span class="badge bg-${iface.status === 1 ? 'success' : 'secondary'}">${iface.status === 1 ? 'ËøêË°å‰∏≠' : 'Â∑≤ÂÅúÊ≠¢'}</span>
                                                    </td>
                                                    <td style="border: none; padding: 12px 16px;">
                                                        <span style="background: rgba(15, 23, 42, 0.8); color: #a78bfa; padding: 4px 8px; border-radius: 6px; font-family: 'Courier New', monospace; font-size: 13px; font-weight: 500;">${iface.network}</span>
                                                        <br>
                                                        <small style="color: #94a3b8; margin-top: 4px; display: inline-block;">ÊúçÂä°Âô®IP: ${iface.server_ip}</small>
                                                    </td>
                                                    <td style="border: none; padding: 12px 16px;">
                                                        <span style="background: rgba(15, 23, 42, 0.8); color: #34d399; padding: 4px 8px; border-radius: 6px; font-family: 'Courier New', monospace; font-size: 13px; font-weight: 500;">${iface.listen_port}</span>
                                                    </td>
                                                    <td style="border: none;">
                                                        <div style="position: relative;">
                                                            <div class="progress" style="height: 20px; background: rgba(15, 23, 42, 0.6);">
                                                                <div class="progress-bar bg-info" role="progressbar" 
                                                                     style="width: ${(iface.total_peers / iface.max_peers * 100).toFixed(1)}%">
                                                                </div>
                                                            </div>
                                                            <div style="position: absolute; top: 0; left: 0; right: 0; bottom: 0; display: flex; align-items: center; justify-content: center;">
                                                                <span style="color: #f1f5f9; font-weight: 600; font-size: 0.8rem; text-shadow: 1px 1px 2px rgba(0,0,0,0.8);">${iface.total_peers}/${iface.max_peers}</span>
                                                            </div>
                                                        </div>
                                                    </td>
                                                    <td style="border: none; padding: 12px 16px;">
                                                        <div class="btn-group btn-group-sm">
                                                            ${iface.status === 1 ? 
                                                                `<button onclick="stopInterface(${iface.id})" 
                                                                        style="background: transparent; border: 1px solid #f59e0b; color: #fbbf24; padding: 4px 8px; border-radius: 4px; font-size: 12px; cursor: pointer; margin-right: 4px; transition: all 0.2s ease;"
                                                                        onmouseover="this.style.background='rgba(245, 158, 11, 0.1)'"
                                                                        onmouseout="this.style.background='transparent'">
                                                                    <i class="fas fa-stop" style="margin-right: 4px;"></i>ÂÅúÊ≠¢
                                                                </button>` :
                                                                `<button onclick="startInterface(${iface.id})" 
                                                                        style="background: transparent; border: 1px solid #10b981; color: #34d399; padding: 4px 8px; border-radius: 4px; font-size: 12px; cursor: pointer; margin-right: 4px; transition: all 0.2s ease;"
                                                                        onmouseover="this.style.background='rgba(16, 185, 129, 0.1)'"
                                                                        onmouseout="this.style.background='transparent'">
                                                                    <i class="fas fa-play" style="margin-right: 4px;"></i>ÂêØÂä®
                                                                </button>`
                                                            }
                                                            <button onclick="viewInterfaceConfig(${iface.id})" 
                                                                    style="background: transparent; border: 1px solid #06b6d4; color: #22d3ee; padding: 4px 8px; border-radius: 4px; font-size: 12px; cursor: pointer; transition: all 0.2s ease;"
                                                                    onmouseover="this.style.background='rgba(6, 182, 212, 0.1)'"
                                                                    onmouseout="this.style.background='transparent'">
                                                                <i class="fas fa-eye" style="margin-right: 4px;"></i>Êü•Áúã
                                                            </button>
                                                        </div>
                                                    </td>
                                                </tr>
                                            `).join('')}
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Âø´Êç∑Êìç‰Ωú -->
                <div class="row">
                    <div class="col-md-12">
                        <div class="d-flex justify-content-between">
                            <div>
                                <button class="btn btn-primary me-2" onclick="showInterfaceManager()">
                                    <i class="fas fa-ethernet me-1"></i>Êé•Âè£ÁÆ°ÁêÜ
                                </button>
                                <button class="btn btn-success me-2" onclick="createNewInterface()">
                                    <i class="fas fa-plus me-1"></i>ÂàõÂª∫Êé•Âè£
                                </button>
                                <button class="btn btn-secondary me-2" onclick="refreshSystemConfig()">
                                    <i class="fas fa-sync-alt me-1"></i>Âà∑Êñ∞Áä∂ÊÄÅ
                                </button>
                            </div>
                            <div>
                                <button class="btn btn-info me-2" onclick="exportSystemConfig()">
                                    <i class="fas fa-download me-1"></i>ÂØºÂá∫ÈÖçÁΩÆ
                                </button>
                                <button class="btn btn-warning me-2" onclick="viewSystemLogs()">
                                    <i class="fas fa-file-alt me-1"></i>Á≥ªÁªüÊó•Âøó
                                </button>
                                <button class="btn btn-outline-danger" onclick="systemSettings()">
                                    <i class="fas fa-cog me-1"></i>Á≥ªÁªüËÆæÁΩÆ
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            `;
            
            document.getElementById('wgConfigContent').innerHTML = content;
        } else {
            document.getElementById('wgConfigContent').innerHTML = '<div class="alert alert-danger">Âä†ËΩΩÁ≥ªÁªü‰ø°ÊÅØÂ§±Ë¥•</div>';
        }
    } catch (error) {
        console.error('Âä†ËΩΩÁ≥ªÁªüÈÖçÁΩÆÂ§±Ë¥•:', error);
        document.getElementById('wgConfigContent').innerHTML = '<div class="alert alert-danger">ÁΩëÁªúÈîôËØØ</div>';
    }
}

// Êü•ÁúãÊé•Âè£ËØ¶ÊÉÖ
function viewInterfaceDetails(interfaceId) {
    // ÂÖ≥Èó≠ÂΩìÂâçÊ®°ÊÄÅÊ°Ü
    const currentModal = bootstrap.Modal.getInstance(document.getElementById('wireGuardConfigModal'));
    if (currentModal) {
        currentModal.hide();
    }
    
    // ÊâìÂºÄÊé•Âè£ÁÆ°ÁêÜÂô®Âπ∂ÂÆö‰ΩçÂà∞ÊåáÂÆöÊé•Âè£
    setTimeout(() => {
        showInterfaceManager();
        // ÂèØ‰ª•Âú®ËøôÈáåÊ∑ªÂä†È´ò‰∫ÆÊòæÁ§∫ÊåáÂÆöÊé•Âè£ÁöÑÈÄªËæë
    }, 300);
}

// Êü•ÁúãÊé•Âè£ÈÖçÁΩÆÔºàÂú®Á≥ªÁªüÈÖçÁΩÆ‰∏≠Ôºâ
function viewInterfaceConfig(interfaceId) {
    showInterfaceConfig(interfaceId);
}

// Âà∑Êñ∞Á≥ªÁªüÈÖçÁΩÆ
function refreshSystemConfig() {
    showWireGuardConfig();
}

// ÂàõÂª∫Êñ∞Êé•Âè£Ôºà‰ªéÁ≥ªÁªüÈÖçÁΩÆ‰∏≠Ôºâ
function createNewInterface() {
    showCreateInterfaceModal();
}

// ÂØºÂá∫Á≥ªÁªüÈÖçÁΩÆ
async function exportSystemConfig() {
    try {
        const token = localStorage.getItem('access_token');
        const response = await fetch('/api/v1/config/export', {
            headers: { 'Authorization': `Bearer ${token}` }
        });
        
        if (response.ok) {
            const blob = await response.blob();
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = 'eitec-vpn-config.json';
            a.click();
            window.URL.revokeObjectURL(url);
        } else {
            alert('ÂØºÂá∫ÈÖçÁΩÆÂ§±Ë¥•');
        }
    } catch (error) {
        console.error('ÂØºÂá∫ÈÖçÁΩÆÂ§±Ë¥•:', error);
        alert('ÂØºÂá∫ÈÖçÁΩÆÂ§±Ë¥•');
    }
}

// Êü•ÁúãÁ≥ªÁªüÊó•Âøó
function viewSystemLogs() {
    alert('Á≥ªÁªüÊó•ÂøóÂäüËÉΩÂºÄÂèë‰∏≠...');
}

// Á≥ªÁªüËÆæÁΩÆ
function systemSettings() {
    alert('Á≥ªÁªüËÆæÁΩÆÂäüËÉΩÂºÄÂèë‰∏≠...');
}

// ÂàùÂßãÂåñWireGuard
async function initializeWireGuard() {
    try {
        const token = localStorage.getItem('access_token');
        const response = await fetch('/api/v1/config/wireguard/init', {
            method: 'POST',
            headers: { 'Authorization': `Bearer ${token}` }
        });
        
        const result = await response.json();
        if (response.ok) {
            alert('WireGuardÂàùÂßãÂåñÊàêÂäüÔºÅ');
            showWireGuardConfig(); // Âà∑Êñ∞ÈÖçÁΩÆÊòæÁ§∫
        } else {
            alert('ÂàùÂßãÂåñÂ§±Ë¥•Ôºö' + result.message);
        }
    } catch (error) {
        console.error('ÂàùÂßãÂåñWireGuardÂ§±Ë¥•:', error);
        alert('ÁΩëÁªúÈîôËØØÔºåËØ∑ÈáçËØï');
    }
}

// ‰∏ãËΩΩÊúçÂä°Âô®ÈÖçÁΩÆ
async function downloadServerConfig() {
    try {
        const token = localStorage.getItem('access_token');
        const response = await fetch('/api/v1/config/wireguard/server-config', {
            headers: { 'Authorization': `Bearer ${token}` }
        });
        
        if (response.ok) {
            const blob = await response.blob();
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = 'wg0.conf';
            a.click();
            window.URL.revokeObjectURL(url);
        } else {
            alert('‰∏ãËΩΩÂ§±Ë¥•');
        }
    } catch (error) {
        console.error('‰∏ãËΩΩÈÖçÁΩÆÂ§±Ë¥•:', error);
        alert('ÁΩëÁªúÈîôËØØÔºåËØ∑ÈáçËØï');
    }
}

// Â∫îÁî®WireGuardÈÖçÁΩÆ
async function applyWireGuardConfig() {
    if (!confirm('Á°ÆÂÆöË¶ÅÂ∫îÁî®WireGuardÈÖçÁΩÆÂêóÔºüËøôÂ∞ÜÈáçÂêØWireGuardÊúçÂä°„ÄÇ')) {
        return;
    }
    
    try {
        const token = localStorage.getItem('access_token');
        const response = await fetch('/api/v1/config/wireguard/apply', {
            method: 'POST',
            headers: { 'Authorization': `Bearer ${token}` }
        });
        
        const result = await response.json();
        if (response.ok) {
            alert('ÈÖçÁΩÆÂ∫îÁî®ÊàêÂäüÔºÅ');
        } else {
            alert('Â∫îÁî®Â§±Ë¥•Ôºö' + result.message);
        }
    } catch (error) {
        console.error('Â∫îÁî®ÈÖçÁΩÆÂ§±Ë¥•:', error);
        alert('ÁΩëÁªúÈîôËØØÔºåËØ∑ÈáçËØï');
    }
}

// Áî®Êà∑VPNÁÆ°ÁêÜÔºàÂ∑≤ÁªèÊï¥ÂêàÂà∞Ê®°ÂùóÁÆ°ÁêÜ‰∏≠Ôºâ
function showUserVPNManager() {
    alert('Áî®Êà∑VPNÁÆ°ÁêÜÂäüËÉΩÂ∑≤Êï¥ÂêàÂà∞Ê®°ÂùóÁÆ°ÁêÜ‰∏≠ÔºÅ\n\nËØ∑Âú®Ê®°ÂùóÂàóË°®‰∏≠ÁÇπÂáª"ÁÆ°ÁêÜÁî®Êà∑"ÊåâÈíÆÊù•ÁÆ°ÁêÜÊ®°ÂùóÁöÑÁî®Êà∑VPNÈÖçÁΩÆ„ÄÇ');
}

// ÂÖ®Â±ÄÂØºÂá∫Á≥ªÁªüÈÖçÁΩÆÁÆ°ÁêÜÂáΩÊï∞
window.showWireGuardConfig = showWireGuardConfig;
window.viewInterfaceDetails = viewInterfaceDetails;
window.viewInterfaceConfig = viewInterfaceConfig;
window.refreshSystemConfig = refreshSystemConfig;
window.createNewInterface = createNewInterface;
window.exportSystemConfig = exportSystemConfig;
window.viewSystemLogs = viewSystemLogs;
window.systemSettings = systemSettings;
window.initializeWireGuard = initializeWireGuard;
window.downloadServerConfig = downloadServerConfig;
window.applyWireGuardConfig = applyWireGuardConfig;
window.showUserVPNManager = showUserVPNManager; 